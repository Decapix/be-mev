# Generated by Django 5.0.1 on 2024-07-10 12:42

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AidesIndividuelles_fp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_personnes', models.IntegerField()),
                ('menage_bleu', models.FloatField()),
                ('menage_jaune', models.FloatField()),
                ('menage_violet', models.FloatField()),
                ('menage_rose', models.FloatField()),
                ('supplement_par_personne', models.FloatField()),
                ('revenu_fiscal_foyer', models.FloatField(blank=True, null=True)),
                ('impot_revenu', models.FloatField(blank=True, null=True)),
                ('pret_taux_zero', models.BooleanField()),
                ('aide_anah', models.BooleanField()),
                ('montant_aide_anah', models.FloatField(blank=True, null=True)),
                ('annee_aide_anah', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='BATI_f',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('travaux_engage', models.BooleanField()),
                ('type_isolant', models.CharField(blank=True, choices=[('polystyrene', 'Polystyrène'), ('laine_minerale', 'Laine minérale'), ('autre', 'Autre')], max_length=50, null=True)),
                ('epaisseur_isolant', models.CharField(blank=True, choices=[('2_4_cm', '2 à 4 cm'), ('4_6_cm', '4 à 6 cm'), ('6_8_cm', '6 à 8 cm'), ('autre', 'Autre')], max_length=50, null=True)),
                ('autre_isolant', models.CharField(blank=True, max_length=100, null=True)),
                ('autre_epaisseur', models.CharField(blank=True, max_length=100, null=True)),
                ('sejour1_vitrage', models.CharField(choices=[('origne', 'Origne'), ('rénové', 'Rénové')], max_length=6)),
                ('sejour1_date', models.CharField(blank=True, choices=[('plus_10', '+ de 10 ans'), ('entre_5_10', 'entre 5 et 10 ans'), ('moins_5', '- de 5 ans')], max_length=10, null=True)),
                ('sejour1_volet', models.CharField(blank=True, choices=[('origine', 'Origine'), ('renovee', 'Rénovée')], max_length=10, null=True)),
                ('sejour2_vitrage', models.CharField(choices=[('origne', 'Origne'), ('rénové', 'Rénové')], max_length=6)),
                ('sejour2_date', models.CharField(blank=True, choices=[('plus_10', '+ de 10 ans'), ('entre_5_10', 'entre 5 et 10 ans'), ('moins_5', '- de 5 ans')], max_length=10, null=True)),
                ('sejour2_volet', models.CharField(blank=True, choices=[('origine', 'Origine'), ('renovee', 'Rénovée')], max_length=10, null=True)),
                ('cuisine_vitrage', models.CharField(choices=[('origne', 'Origne'), ('rénové', 'Rénové')], max_length=6)),
                ('cuisine_date', models.CharField(blank=True, choices=[('plus_10', '+ de 10 ans'), ('entre_5_10', 'entre 5 et 10 ans'), ('moins_5', '- de 5 ans')], max_length=10, null=True)),
                ('cuisine_volet', models.CharField(blank=True, choices=[('origine', 'Origine'), ('renovee', 'Rénovée')], max_length=10, null=True)),
                ('chambre1_vitrage', models.CharField(choices=[('origne', 'Origne'), ('rénové', 'Rénové')], max_length=6)),
                ('chambre1_date', models.CharField(blank=True, choices=[('plus_10', '+ de 10 ans'), ('entre_5_10', 'entre 5 et 10 ans'), ('moins_5', '- de 5 ans')], max_length=10, null=True)),
                ('chambre1_volet', models.CharField(blank=True, choices=[('origine', 'Origine'), ('renovee', 'Rénovée')], max_length=10, null=True)),
                ('chambre2_vitrage', models.CharField(choices=[('origne', 'Origne'), ('rénové', 'Rénové')], max_length=6)),
                ('chambre2_date', models.CharField(blank=True, choices=[('plus_10', '+ de 10 ans'), ('entre_5_10', 'entre 5 et 10 ans'), ('moins_5', '- de 5 ans')], max_length=10, null=True)),
                ('chambre2_volet', models.CharField(blank=True, choices=[('origine', 'Origine'), ('renovee', 'Rénovée')], max_length=10, null=True)),
                ('chambre3_vitrage', models.CharField(choices=[('origne', 'Origne'), ('rénové', 'Rénové')], max_length=6)),
                ('chambre3_date', models.CharField(blank=True, choices=[('plus_10', '+ de 10 ans'), ('entre_5_10', 'entre 5 et 10 ans'), ('moins_5', '- de 5 ans')], max_length=10, null=True)),
                ('chambre3_volet', models.CharField(blank=True, choices=[('origine', 'Origine'), ('renovee', 'Rénovée')], max_length=10, null=True)),
                ('chambre4_vitrage', models.CharField(choices=[('origne', 'Origne'), ('rénové', 'Rénové')], max_length=6)),
                ('chambre4_date', models.CharField(blank=True, choices=[('plus_10', '+ de 10 ans'), ('entre_5_10', 'entre 5 et 10 ans'), ('moins_5', '- de 5 ans')], max_length=10, null=True)),
                ('chambre4_volet', models.CharField(blank=True, choices=[('origine', 'Origine'), ('renovee', 'Rénovée')], max_length=10, null=True)),
                ('salle_de_bain_vitrage', models.CharField(choices=[('origne', 'Origne'), ('rénové', 'Rénové')], max_length=6)),
                ('salle_de_bain_date', models.CharField(blank=True, choices=[('plus_10', '+ de 10 ans'), ('entre_5_10', 'entre 5 et 10 ans'), ('moins_5', '- de 5 ans')], max_length=10, null=True)),
                ('salle_de_bain_volet', models.CharField(blank=True, choices=[('origine', 'Origine'), ('renovee', 'Rénovée')], max_length=10, null=True)),
                ('wc_vitrage', models.CharField(choices=[('origne', 'Origne'), ('rénové', 'Rénové')], max_length=6)),
                ('wc_date', models.CharField(blank=True, choices=[('plus_10', '+ de 10 ans'), ('entre_5_10', 'entre 5 et 10 ans'), ('moins_5', '- de 5 ans')], max_length=10, null=True)),
                ('wc_volet', models.CharField(blank=True, choices=[('origine', 'Origine'), ('renovee', 'Rénovée')], max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ChauffageEauChaude_f',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_chauffage', models.CharField(choices=[('chaudiere_gaz', 'Chaudière gaz'), ('electrique', 'Electrique'), ('autres', 'Autres')], max_length=50)),
                ('chauffage_details', models.TextField(blank=True, null=True)),
                ('type_eau_chaude', models.CharField(choices=[('chaudiere_gaz', 'Chaudière gaz'), ('electrique', 'Electrique'), ('autres', 'Autres')], max_length=50)),
                ('eau_chaude_details', models.TextField(blank=True, null=True)),
                ('periode_debut', models.DateField(blank=True, null=True)),
                ('periode_fin', models.DateField(blank=True, null=True)),
                ('consommation_kwh', models.FloatField(blank=True, null=True)),
                ('cout_ttc', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CompositionMenage_fp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('situation', models.CharField(choices=[('salarie', 'Salarié'), ('liberal', 'Libéral, indépendant, autoentrepreneur'), ('retraite', 'Retraité'), ('demandeur_emploi', "Demandeur d'emploi"), ('etudiant', 'Etudiant, en formation'), ('autre', 'Autre')], max_length=50)),
                ('situation_details', models.CharField(blank=True, max_length=100, null=True)),
                ('nombre_personnes', models.IntegerField()),
                ('nombre_adultes', models.IntegerField()),
                ('nombre_enfants_mineurs', models.IntegerField()),
                ('nombre_enfants_majeurs', models.IntegerField()),
                ('personne_handicap', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='DescriptifDesLogement_f',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_du_lot', models.CharField(max_length=50)),
                ('proprietaire_occupant', models.BooleanField()),
                ('prenom', models.CharField(max_length=100)),
                ('email', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='DescriptifDuLogement_f',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_du_lot', models.CharField(max_length=50)),
                ('proprietaire_occupant', models.BooleanField()),
                ('prenom', models.CharField(max_length=100)),
                ('email', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Financement_f',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pret_collectif', models.BooleanField(default=False)),
                ('pret_individuel', models.BooleanField(default=False)),
                ('financement_fonds_propres', models.BooleanField(default=False)),
                ('ne_se_prononce_pas', models.BooleanField(default=False)),
                ('duree_pret', models.IntegerField(blank=True, choices=[(3, '3 ans'), (5, '5 ans'), (7, '7 ans'), (10, '10 ans'), (12, '12 ans'), (15, '15 ans'), (20, '20 ans')], null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Identification_f',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('telephone', models.CharField(max_length=25)),
                ('prenom', models.CharField(max_length=100)),
                ('email', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ProprietairesOccupantsIntro_fp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('residence_principale', models.BooleanField()),
                ('difficulte_payer_charges', models.BooleanField()),
                ('montant_impayes', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SituationProfessionnelle_fp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('situation_professionnelle', models.CharField(choices=[('salarie_prive', 'Salarié du secteur privé'), ('travailleur_independant', 'Travailleur indépendant'), ('retraite', 'Retraité'), ('fonctionnaire', 'Fonctionnaire'), ('sans_emploi', 'Sans emploi'), ('autre', 'Autre')], max_length=50)),
                ('fonctionnaire_details', models.CharField(blank=True, max_length=100, null=True)),
                ('situation_professionnelle_conjoint', models.CharField(choices=[('salarie_prive', 'Salarié du secteur privé'), ('travailleur_independant', 'Travailleur indépendant'), ('retraite', 'Retraité'), ('fonctionnaire', 'Fonctionnaire'), ('sans_emploi', 'Sans emploi'), ('autre', 'Autre')], max_length=50)),
                ('fonctionnaire_conjoint_details', models.CharField(blank=True, max_length=100, null=True)),
                ('beneficie_prestation_caf', models.BooleanField()),
                ('prestation_apa', models.BooleanField(default=False)),
                ('prestation_pch', models.BooleanField(default=False)),
                ('prestation_actp', models.BooleanField(default=False)),
                ('prestation_psd', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Sondage_f',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isolation_facades', models.BooleanField(default=False)),
                ('isolation_toiture', models.BooleanField(default=False)),
                ('regulation_chauffage', models.BooleanField(default=False)),
                ('remplacement_fenetres', models.BooleanField(default=False)),
                ('amelioration_ventilation', models.BooleanField(default=False)),
                ('remplacement_chauffage', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Ventilation_f',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grilles_entree_air', models.BooleanField(choices=[(True, 'Oui'), (False, 'Non'), (None, 'Ne sais pas')], null=True)),
                ('bouches_extraction_air', models.BooleanField(choices=[(True, 'Oui'), (False, 'Non'), (None, 'Ne sais pas')], null=True)),
                ('nettoyage_regulier', models.BooleanField(choices=[(True, 'Oui'), (False, 'Non'), (None, 'Ne sais pas')], null=True)),
                ('ventilation_motorisee', models.BooleanField(choices=[(True, 'Oui'), (False, 'Non'), (None, 'Ne sais pas')], null=True)),
                ('ventilation_ouverte_temps', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LogementPLS_BAT',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('etage', models.PositiveIntegerField()),
                ('batiment', models.CharField(max_length=100)),
                ('nombre_de_piece', models.PositiveIntegerField()),
                ('surface', models.CharField(max_length=100)),
                ('annee_d_aquisition', models.DateField()),
                ('descriptif_du_logements', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logements_pls_bat', to='client_form.descriptifdulogement_f')),
            ],
        ),
        migrations.CreateModel(
            name='LogementUN_BAT',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('etage', models.PositiveIntegerField()),
                ('nombre_de_piece', models.PositiveIntegerField()),
                ('surface', models.CharField(max_length=100)),
                ('annee_d_aquisition', models.DateField()),
                ('descriptif_du_logements', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logements_un_bat', to='client_form.descriptifdulogement_f')),
            ],
        ),
        migrations.CreateModel(
            name='Formulaire',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=100)),
                ('aides_individuelles', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, to='client_form.aidesindividuelles_fp')),
                ('bati', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, to='client_form.bati_f')),
                ('chauffage_eau_chaude', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, to='client_form.chauffageeauchaude_f')),
                ('composition_menage', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, to='client_form.compositionmenage_fp')),
                ('descriptif_du_logement', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, to='client_form.descriptifdulogement_f')),
                ('financement', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, to='client_form.financement_f')),
                ('identification', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, to='client_form.identification_f')),
                ('situation_professionnelle', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, to='client_form.situationprofessionnelle_fp')),
                ('sondage', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, to='client_form.sondage_f')),
                ('ventilation', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, to='client_form.ventilation_f')),
            ],
        ),
    ]
